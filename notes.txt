socket utils

on client side:
there's only 1 object: the socket


on server side:
ther's 2 objects:
1. the socket : the server's 'connected end' . when doing socket.on() :
 attaching a handler to the server specific socket : mostly event listeners for events coming from the clients
2. io : the 'global' connection object.


on server side:
io.on('connection') , socket => {
    socket.on('event'  () => {})
}
    this is the handler for the server side: 'connection' is the actual connection event.
    the socket obj refers to the specific client socket that performed the event that the server responds to.

when doing:
 socket.on('event' , (e) => {
    io.emit()
})
 => sending messeges to all the clients : including the one that send the event 
    
    in contrast to:
 socket.on('event' , (e) => {
    socket.broadcast.emit()
})
=>  sending message to all of the clients except for the one responsible for the event
